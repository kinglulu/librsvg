AC_INIT(rsvg.h)
AM_CONFIG_HEADER(config.h)

LIBRSVG_MAJOR_VERSION=1
LIBRSVG_MINOR_VERSION=1
LIBRSVG_MICRO_VERSION=0
LIBRSVG_VERSION=$LIBRSVG_MAJOR_VERSION.$LIBRSVG_MINOR_VERSION.$LIBRSVG_MICRO_VERSION
LIBRSVG_VERSION_INFO=`expr $LIBRSVG_MAJOR_VERSION + $LIBRSVG_MINOR_VERSION`:$LIBRSVG_MICRO_VERSION:$LIBRSVG_MINOR_VERSION

AC_SUBST(LIBRSVG_MAJOR_VERSION)
AC_SUBST(LIBRSVG_MINOR_VERSION)
AC_SUBST(LIBRSVG_MICRO_VERSION)
AC_SUBST(LIBRSVG_VERSION)
AC_SUBST(LIBRSVG_VERSION_INFO)

VERSION=$LIBRSVG_VERSION

AM_INIT_AUTOMAKE(librsvg, $VERSION)
GNOME_COMMON_INIT

AM_MAINTAINER_MODE

AM_PROG_XML_I18N_TOOLS

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_AWK
AM_PROG_LIBTOOL
AC_STDC_HEADERS

GNOME_REQUIRE_PKGCONFIG

GNOME_PLATFORM_GNOME_2(yes)

GLIB_REQUIRED=1.3.1
XML_REQUIRED=2.2.8
ART_REQUIRED=2.3.4
GTK_REQUIRED=1.3.7
GDK_PIXBUF_REQUIRED=1.3.7
FREETYPE_REQUIRED=2.0.1
FREETYPE_LIBRARY_REQUIRED=6.1.0
POPT_REQUIRED=1.5

AC_SUBST(GLIB_REQUIRED)
AC_SUBST(XML_REQUIRED)
AC_SUBST(ART_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(GDK_PIXBUF_REQUIRED)
AC_SUBST(FREETYPE_REQUIRED)
AC_SUBST(POPT_REQUIRED)

GNOME_PKGCONFIG_CHECK_MODULES(GLIB, glib-2.0:$GLIB_REQUIRED gmodule-2.0:$GLIB_REQUIRED gthread-2.0:$GLIB_REQUIRED gtk+-2.0:$GLIB_REQUIRED)
GNOME_PKGCONFIG_CHECK_MODULES(GTK, gtk+-2.0:$GTK_REQUIRED)
GNOME_PKGCONFIG_CHECK_MODULES(GDK_PIXBUF, gdk-pixbuf-2.0:$GDK_PIXBUF_REQUIRED)
GNOME_PKGCONFIG_CHECK_MODULES(XML, libxml-2.0:$XML_REQUIRED)
GNOME_PKGCONFIG_CHECK_MODULES(ART, libart-2.0:$ART_REQUIRED)

dnl AC_DEFINE(GNOME_PLATFORM_VERSION, 1095000)

AC_SUBST(GLIB_LIBS)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GMODULE_LIBS)
AC_SUBST(GMODULE_CFLAGS)
AC_SUBST(GTHREAD_LIBS)
AC_SUBST(GTHREAD_CFLAGS)
AC_SUBST(GTK_LIBS)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GDK_PIXBUF_LIBS)
AC_SUBST(GDK_PIXBUF_CFLAGS)
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)
AC_SUBST(ART_LIBS)
AC_SUBST(ART_CFLAGS)


dnl ====================================
dnl = Begin tests for popt
dnl ====================================
AC_CHECK_LIB(popt, poptParseArgvString, [POPT_LIBS="-lpopt"])
AC_SUBST(POPT_LIBS)
dnl ====================================
dnl = End tests for popt
dnl ====================================

dnl ====================================
dnl = Begin tests for libpng
dnl ====================================
  if test -z "$LIBPNG"; then
    AC_CHECK_LIB(png, png_read_info,
      AC_CHECK_HEADER(png.h,
        png_ok=yes,
        png_ok=no),
      AC_MSG_ERROR(*** (PNG library not found) ***), -lz -lm)
    if test "$png_ok" = yes; then
      AC_MSG_CHECKING([for png_structp in png.h])
      AC_TRY_COMPILE([#include <png.h>],
        [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
        png_ok=yes,
        png_ok=no)
      AC_MSG_RESULT($png_ok)
      if test "$png_ok" = yes; then
        PNG='png'; LIBPNG='-lpng -lz'
      else
        AC_MSG_WARN(*** PNG loader will not be built (PNG library is too old) ***)
      fi
    else
     AC_MSG_WARN(*** PNG loader will not be built (PNG header file not found) ***)
    fi
  fi

AC_SUBST(LIBPNG)
dnl =======================
dnl = End tests for libpng
dnl =======================

dnl =======================
dnl = begin tests for FreeType2
dnl =======================
NAUTILUS_PATH_FREETYPE2($FREETYPE_LIBRARY_REQUIRED,,
AC_MSG_ERROR([
*** FreeType2 $FREETYPE_REQUIRED or better is required. You can obtain a
*** packaged version of FreeType2 over here:
*** http://developer.eazel.com/eazel-hacking/updates/freetype2
*** source versions are available from ftp://ftp.freetype.org]))

AC_SUBST(FREETYPE2_CFLAGS)
AC_SUBST(FREETYPE2_LIBS)
dnl =======================
dnl = End tests for FreeType2
dnl =======================

LIBRSVG_LIBDIR='-L${libdir}'
LIBRSVG_INCLUDEDIR='-I${includedir} ${FREETYPE2_CFLAGS}'
LIBRSVG_LIBS='-lrsvg -lart_lgpl ${FREETYPE2_LIBS}'

AC_SUBST(LIBRSVG_LIBDIR)
AC_SUBST(LIBRSVG_INCLUDEDIR)
AC_SUBST(LIBRSVG_LIBS)

AC_C_BIGENDIAN

AC_OUTPUT([
librsvg.spec
librsvg-features.h
Makefile
librsvg-2.0.pc])
